{
  "hash": "fcf0110edf2f29694e1332a961d05327",
  "result": {
    "markdown": "---\ntitle: Probability theory and random variables\nauthor: Barry Menglong Yao\ndate: '2023-11-29'\nformat:\n  html:\n    code-fold: false\ncategories:\n  - news\n  - code\n  - analysis\nimage: image.jpg\n---\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef simulate_coin_flips(num_flips):\n    outcomes = np.random.choice(['Heads', 'Tails'], size=num_flips)\n    head_count = np.cumsum(outcomes == 'Heads')\n    probabilities = head_count / np.arange(1, num_flips + 1)\n    return probabilities\n\ndef plot_probability_change(probabilities):\n    plt.plot(probabilities)\n    plt.title('Probability of Getting Heads over 100 Coin Flips')\n    plt.xlabel('Number of Flips')\n    plt.ylabel('Probability')\n    plt.axhline(0.5, color='red', linestyle='--', label='Expected Probability (0.5)')\n    plt.legend()\n    plt.show()\n\n# Simulate coin flips and plot the results\nnum_flips = 1000\nprobabilities = simulate_coin_flips(num_flips)\nplot_probability_change(probabilities)\n```\n\n::: {.cell-output .cell-output-display}\n![flip coins](index_files/figure-html/fig-coin-output-1.png){#fig-coin width=589 height=449}\n:::\n:::\n\n\nBased on the above figure @fig-coin, we can find that at the early stage, the probability of getting heads may be 0.3, 0.6 or something else. However, when we flip coins for more and more times, the probability will be converged to about the expected probability 0.5.\n\nThen next question we want to explore is that: What if we do some tricks to make the head side of coin heavier than the tail side of coin? In this case, let us assume head side of coin is 7 grams while the tail side is 3 grams.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef simulate_coin_flips(num_flips):\n    outcomes = np.random.choice(['Heads', 'Tails'], size=num_flips,p=[0.7,0.3])\n    head_count = np.cumsum(outcomes == 'Heads')\n    probabilities = head_count / np.arange(1, num_flips + 1)\n    return probabilities\n\ndef plot_probability_change(probabilities):\n    plt.plot(probabilities)\n    plt.title('Probability of Getting Heads over 100 Coin Flips')\n    plt.xlabel('Number of Flips')\n    plt.ylabel('Probability')\n    plt.axhline(0.7, color='red', linestyle='--', label='Expected Probability (0.5)')\n    plt.legend()\n    plt.show()\n\n# Simulate coin flips and plot the results\nnum_flips = 3000\nprobabilities = simulate_coin_flips(num_flips)\nplot_probability_change(probabilities)\n```\n\n::: {.cell-output .cell-output-display}\n![flip coins](index_files/figure-html/fig-coin2-output-1.png){#fig-coin2 width=589 height=449}\n:::\n:::\n\n\nAgain, we can find that at the early stage, the probability of getting heads may be something random. However, when we flip coins for more and more times, the probability will be converged to about the expected probability 0.7. \n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}